syntax = "proto3";

// option go_package = "google.golang.org/grpc/examples/helloworld/helloworld";

option go_package = "dfs/proto";

package proto;

service dfs {
  rpc GetFileLocation (FileName) returns (FileLocationArr);
  rpc RenewLock(FileName) returns (RenewalStatus);
  rpc CheckDataNode(HealthCheckRequest) returns (HealthCheckResponse);
  rpc GetBlock (FileName) returns (stream File){};
  rpc CreateFile (FileName) returns (FileLocationArr);
}

message BlockLocation {
  string ipAddr = 1;
  string blockName = 2;
  int32 blockSize = 3;
}

message FileLocationArr {
  repeated BlockReplicaList FileBlocksList = 1;
}

message BlockReplicaList {
  repeated BlockLocation BlockReplicaList = 1;
}

message FileName {
  enum Mode {
    READ = 0;
    WRITE = 1;
  }
  string fileName = 1;
  Mode mode = 2;
}

message HealthCheckRequest {
  string service = 1;
}

message RenewalStatus {
  bool success = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
  }
  ServingStatus status = 1;
}

message File {
  bytes content = 1;
}
