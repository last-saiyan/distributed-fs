syntax = "proto3";

// option go_package = "google.golang.org/grpc/examples/helloworld/helloworld";

option go_package = "dfs/proto";

package proto;

service dfs {
  rpc GetFileLocation (FileName) returns (FileLocationArr);
  rpc RenewLock(FileName) returns (RenewalStatus);
  rpc DatanodeHeartbeat(Heartbeat) returns (DatanodeOperation);
  rpc CreateFile (FileName) returns (FileLocationArr);
  rpc GetBlock (FileName) returns (stream File){};
  rpc WriteBlock (stream FileWriteStream) returns (BlockStatus){};
  rpc RegisterDataNode (RegisterDataNodeReq) returns (RegisterStatus);
}

message Heartbeat {
  uint64 DiskUsage = 2;
}

message DatanodeOperation {
  enum Operation {
    DELETE = 0;
    REPLICATE = 1;
  }
  Operation operation = 1;
  string ipAddr = 2;
}

message RegisterDataNodeReq {
  bool new = 1;
  uint64 DiskUsage = 2;
}

message RegisterStatus {
  bool status =1;
}

message FileWriteStream {
  File file = 1;
  BlockReplicaList BlockReplicaList = 2;
}

message BlockLocation {
  string ipAddr = 1;
  string blockName = 2;
  int64 blockSize = 3;
}

message FileLocationArr {
  repeated BlockReplicaList FileBlocksList = 1;
}

message BlockReplicaList {
  repeated BlockLocation BlockReplicaList = 1;
}

message FileName {
  enum Mode {
    READ = 0;
    WRITE = 1;
  }
  string fileName = 1;
  Mode mode = 2;
}


message RenewalStatus {
  bool success = 1;
}

message BlockStatus {
  bool success = 1;
}

message File {
  bytes content = 1;
}
